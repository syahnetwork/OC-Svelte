{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Schema.svelte",
    "../../Schemas.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import Schema from \"./Schema.svelte\";\n  import Schemas from \"./Schemas.svelte\";\n\n  let schemas;\n  let schema;\n\n</script>\n\n<svelte:head>\n  <title>Svelte Open Clinica</title>\n</svelte:head>\n\n<style>\n\nmain {\n  background-color: lavenderblush;\n  font-size: 15px;\n}\n  h1 {\n    font-size: 25px;\n\t}\n\n</style>\n\n  <h1>The Open Clinica Svelte App</h1>\n<main>\n\t\t<Schemas {schemas} />\n</main>",
    "<script>\n  export let schema;\n  console.log(schema);\n\n  let addParticipant = () => {\n    const newParticipant = {\n      study_subject_id: schema.length + 1,\n      label: schema.label,\n      study_id: schema.study_id\n    };\n    schema = schema.concat(addParticipant);\n    schema = {\n      study_subject_id: null,\n      label: \"\",\n      study_id: \"\"\n    };\n  };\n\nlet isEdit = false;\n\n  let editParticipant = schema => {\n    isEdit = true;\n    data = schema;\n  };\n</script>\n\n<style>\n  article {\n    margin: 0 0 1em 0;\n  }\n\n  h1 {\n    font-size: 1.4em;\n    margin: 0;\n    display: block;\n  }\n</style>\n\n<!-- <article>\n\t\t<h1>{schema.name}</h1>\n\t\t<small>\n\t\t\tSchema : <b>{schema.schema}</b>\t\t\n\t\t</small><br/>\n\t\t<small>\n\t\t\tDatabase of : <b>{schema.database}</b>\n\t\t</small><br/>\n</article> -->\n<article>\n  <h1>study_subject_id = {schema.study_subject_id}</h1>\n  <small>\n    Label :\n    <b>{schema.label}</b>\n  </small>\n  <br />\n  <small>\n    study_id :\n    <b>{schema.study_id}</b>\n  </small>\n  <br />\n</article>\n\n<section>\n  <div class=\"container\">\n    <div class=\"row mt-5 \">\n      <div class=\"col-md-6\">\n        <div class=\"card p-2 shadow\">\n          <div class=\"card-body\">\n            <h1 class=\"card-title mb-4\">Add New Participant</h1>\n            <form>\n              <div class=\"form-group\">\n                <label for=\"title\">label</label>\n                <input\n                  bind:value={schema.label}\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"text\"\n                  placeholder=\"label\" />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"category\">study_id</label>\n                <input\n                  bind:value={schema.study_id}\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"text\"\n                  placeholder=\"study_id\" />\n              </div>\n\n              <!-- <div class=\"form-group\">\n                <label for=\"content\">Content</label>\n                <textarea\n                  bind:value={data.content}\n                  class=\"form-control\"\n                  id=\"content\"\n                  rows=\"3\"\n                  placeholder=\"Note Content\" />\n              </div> -->\n              {#if isEdit === false}\n                <button\n                  type=\"submit\"\n                  on:click|preventDefault={addParticipant}\n                  class=\"btn btn-primary\">\n                  Add Participant\n                </button>\n              <!-- {:else}\n                <button\n                  type=\"submit\"\n                  on:click|preventDefault={updateNote}\n                  class=\"btn btn-info\">\n                  Edit Note\n                </button> -->\n              {/if}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n",
    "<script>\n\timport { onMount } from \"svelte\";\n\timport Schema from \"./Schema.svelte\";\n\n\tlet schemas;\n\n\tonMount(async () => {\n\t\t// await fetch(`http://0.0.0.0:3010/openclinica/s_02052020test`)\n\t\tawait fetch(`http://0.0.0.0:3010/openclinica/s_02052020test/study_subject`)\n\t\t\t.then(r => r.json())\n\t\t\t.then(data => {\n\t\t\t\tschemas = data;\n\t\t\t});\n\t})\n\n\n</script>\n\n<style>\n\t.loading {\n\t\topacity: 0;\n\t\tanimation: 0.4s 0.8s forwards fade-in;\n\t}\n\n\t@keyframes fade-in {\n\t\tfrom { opacity: 0; }\n\t\tto { opacity: 1; }\n\t}\n\n\tli {\n\t\tlist-style-type: georgian;\n\t}\n</style>\n\n{#if schemas}\n\t{#each schemas as schema }\n\t\t<ul>\n\t\t\t<li>\t\t\n\t\t\t\t<Schema {schema} />\n\t\t\t</li>\n\t\t</ul>\n\t{/each}\n\n{:else}\n\t<p class=\"loading\">loading...</p>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAgBA,IAAI,cAAC,CAAC,AACJ,gBAAgB,CAAE,aAAa,CAC/B,SAAS,CAAE,IAAI,AACjB,CAAC,AACC,EAAE,cAAC,CAAC,AACF,SAAS,CAAE,IAAI,AAClB,CAAC;ACKA,OAAO,eAAC,CAAC,AACP,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,KAAK,AAChB,CAAC;AChBF,QAAQ,eAAC,CAAC,AACT,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,sBAC/B,CAAC,AAED,WAAW,sBAAQ,CAAC,AACnB,IAAI,AAAC,CAAC,AAAC,OAAO,CAAE,CAAC,AAAE,CAAC,AACpB,EAAE,AAAC,CAAC,AAAC,OAAO,CAAE,CAAC,AAAE,CAAC,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACH,eAAe,CAAE,QAAQ,AAC1B,CAAC"
}